---========================---
---== LUA MODULE IMPORTS ==---
---========================---
local debugdraw = require("lua-modules.libs-defold.debug-draw.debug-draw")
local defmath = require("lua-modules.libs-defold.defmath.defmath")
local lume = require("lua-modules.libs-external.lume.lume")
local gui_extra = require("lua-modules.libs-defold.gui_extra.gui_extra")
local rc = require("lua-modules.libs-defold.rendercam.rendercam")

----------------------------------------------------------------
----------------------------------------------------------------


function init(self)
	-- initialization of the "GUI extra functions" (by AGulev)
	-- https://forum.defold.com/t/gui-set-screen-position-and-gui-screen-pos-to-node-pos/47365
	gui_extra.init()
	
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

	self.active = 0

	self.gamepad_back_pos_INIT = gui.get_screen_position(gui.get_node("gamepad_back"))
	self.gamepad_back_pos = self.gamepad_back_pos_INIT
	
	self.mouse_pos = vmath.vector3()
	
end

function on_input(self, action_id, action)

	self.mouse_pos = vmath.vector3(action.x, action.y, 0)
	self.mouse_angle = 0

	if action_id == hash("touch") then
		if action.pressed then -- if the user maintains the click (anywhere for now)
			local node_gamepad = gui.get_node("gamepad_back")
			local node_clickzone = gui.get_node("gamepad_clickzone")
			if gui.pick_node(node_clickzone, action.x, action.y) then -- if the click is made in the gamepad_clickzone
				self.active = 1  -- then gamepad is considered "active"
				if gui.pick_node(node_gamepad, action.x, action.y) == false then -- more specifically, if made outside the gamepad
					gui.set_position(gui.get_node("gamepad_back"), self.mouse_pos) -- then the gamepad is visually moved to the mouse position
				end
			end
		elseif action.released then
			self.active = 0 -- gamepad no longer active
			self.gamepad_back_pos = self.gamepad_back_pos_INIT -- gamepad back to initial position
		end 
	end
end

function update(self, dt)

	
	if self.active == 1 then
		
		------------------------------------------------------------------
		-- JC 02/05/2021 15:37 # gamepad stuff
		------------------------------------------------------------------
			
		local node = gui.get_node("gamepad_back")
		self.gamepad_back_pos = gui.get_screen_position(node)
	
		self.angle = defmath.angle_of_vector_between_two_points(self.gamepad_back_pos.x, self.gamepad_back_pos.y, self.mouse_pos.x, self.mouse_pos.y)

		local x, y = lume.vector(self.angle, 1)
		self.vector_dir = vmath.vector3(x, y, 0)
		
	end

	gui.set_position(gui.get_node("gamepad_back"), self.gamepad_back_pos)


		
	------------------------------------
	------------------------------------
	------------ DEBUG STUFF -----------
	------------------------------------
	------------------------------------

	-- JC 02/05/221 15:41 # Displayed values
	debugdraw.text("Active: "..self.active, 10, 600, color)
	--if self.active == 1 then
		debugdraw.text("gamepad_back_pos: "..self.gamepad_back_pos, 10, 600, color)
		debugdraw.text("mouse_pos: "..self.mouse_pos, 10, 585, color)
	--end

	-- JC 02/05/221 15:41 # Debug circle
	local gamepad_radius = 82
	debugdraw.circle(self.gamepad_back_pos.x, self.gamepad_back_pos.y, gamepad_radius, color, 32) -- circle around gamepad
	
end